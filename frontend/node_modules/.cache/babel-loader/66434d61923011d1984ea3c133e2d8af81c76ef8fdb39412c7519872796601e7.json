{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:3000'; // Backend service URL\n\nexport const login = async (email, password) => {\n  const response = await axios.post(`${API_URL}/users/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const register = async (name, email, password) => {\n  try {\n    const response = await fetch('http://127.0.0.1:3000/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Registration failed');\n    }\n    return await response.json(); // Return the response data\n  } catch (error) {\n    console.error('Error during registration:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","email","password","response","post","data","register","name","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","error","console"],"sources":["/Users/amandadu/Desktop/coffeeshop/frontend/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:3000'; // Backend service URL\n\nexport const login = async (email, password) => {\n  const response = await axios.post(`${API_URL}/users/login`, { email, password });\n  return response.data;\n};\n\n\nexport const register = async (name, email, password) => {\n  try {\n    const response = await fetch('http://127.0.0.1:3000/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, email, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Registration failed');\n    }\n\n    return await response.json(); // Return the response data\n  } catch (error) {\n    console.error('Error during registration:', error.message);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,cAAc,EAAE;IAAEE,KAAK;IAAEC;EAAS,CAAC,CAAC;EAChF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAGD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEN,KAAK,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMK,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,IAAI;QAAEN,KAAK;QAAEC;MAAS,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,qBAAqB,CAAC;IAC7D;IAEA,OAAO,MAAMf,QAAQ,CAACa,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACD,OAAO,CAAC;IAC1D,MAAMC,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}